import lat.Lat;

aspectdef tune_mm
	var lat = new Lat("blocked_mm");

	lat.setOutputFolder("C:/Users/M/Desktop/Development/specs/LAT/lat/examples/SmartSearch/Dst");
	lat.setVerbose(true).loadCmaker().cmaker.setGenerator("MinGW Makefiles").setMakeCommand("mingw32-make");
	// lat.setVerbose(true).loadCmaker().cmaker.setMakeCommand("nmake");

	select marker end
	apply
		if($marker.id == "smartSearchTest"){
			lat.setMeasure($marker.contents);
			break;
		}
	end
	var x = new LatVarRange("x", 1, 100, 10);
	var y = new LatVarRange("y", 5, 21, 3);
	lat.setVariables([x, y]);

	//some metrics helper functions
	function Metrics(){};
	var metrics = new Metrics();
	Metrics.prototype.restart = function(){
		this.average = 0;
		this.minDiff = Infinity;
		this.count = 0;
	};
	Metrics.prototype.update = function(number){
		var total = this.average * this.count + this.number;//undo the division and add the new number
		var newAverage = total/(this.count++);//calculte new average
		var diff = Math.abs(newAverage - this.average);//calculate current diff
		this.average = average;//update the average
		this.minDiff = Math.min(this.minDiff, diff);//update the minDiff
	};

	metrics.restart();
	while (at.uniqueVariables.length > 0) {
		lat.generateVariantSourceCode(0);
		// var result = lat.executeVariant(0);
		var result = (Math.random() * (0.5 - 1.8) + 1.8).toFixed(4);///TODO: replace with above
		metrics.update(result);
		if (metrics.minDiff < 0.01) {//example stop condition
			break;
		}else if(metrics.average > 1.23){//example stop condition
			break;
		}else if(metrics.average > 1){//filter example
			lat.filterVariants(function(variant){
				return variant[0].value < (metrics.count * 10) || variant[0].default == false;//filter out values greater than or equal to (metrics.count * 10) and default values
			});
		}
		lat.removeVariant(0);
	}

	lat.tune();
end
