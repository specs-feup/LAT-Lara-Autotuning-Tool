var LatVar = function(name, type) {
    LatUtils.checkString(name, "LatVar*.name");
    this.name = name;
    this.setType(type);
    this.index = -1; /** used to avoid multiple searches, it records the position of this LatVar in an array of LatVars */
    this.first = true; //the first value getNext returns is always LatConst.LAT_VALUE.DEFAULT
};

LatVar.prototype.equals = function(tester) {
    return this.name === tester.name;
};

LatVar.prototype.getNext = function() {
    LatUtils._error("function getNext not implemented");
};
LatVar.prototype.hasNext = function() {
    LatUtils._error("function hasNext not implemented");
};
LatVar.prototype.countElements = function() {
    LatUtils._error("function countElements not implemented");
};
LatVar.prototype.restart = function() {
    LatUtils._error("function restart not implemented");
};
LatVar.prototype.setType = function(type) {
    if (type === LatConst.OUTPUT_TYPE.STRING || type === LatConst.OUTPUT_TYPE.CHAR) {
        this.type = type;
    } else {
        this.type = LatConst.OUTPUT_TYPE.AUTO;
    }
};