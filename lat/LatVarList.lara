import lat.templates;
import lara.util.Replacer;

var LatVarList = function(name, elements, type) {
    LatVar.call(this, name, type);
    LatUtils.checkArray(elements, "LatVarList elements");
    if (elements.length <= 0) {
        LatUtils._error("LatVarList elements parameter only accepts non-empty element lists");
    }
    this.elements = LatUtils.removeDuplicates(elements);
    this.restart();
};

LatVarList.prototype = Object.create(LatVar.prototype);
LatVarList.prototype.constructor = LatVarList;

//Functions overloaded from LatVar

LatVarList.prototype.getNext = function() {
    if (this.first) {
        this.first = false;
        return LatUtils.clone(LatConst.LAT_VALUE.DEFAULT);
    }
    return { type: this.type, value: this.elements[this.elementIndex++], default: false };
};
LatVarList.prototype.hasNext = function() {
    return this.elementIndex < this.elements.length;
};
LatVarList.prototype.countElements = function() {
    return this.elements.length + 1;
};
LatVarList.prototype.restart = function() {
    this.elementIndex = 0;
    this.first = true;
    return this;
};

LatVarList.prototype.newTemplateCard = function() {
	return new Replacer(templates.getString("var_list.html.template"));
}