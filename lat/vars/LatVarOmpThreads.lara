import lat.LatVar;

var LatVarOmpThreads = function(numThreads, disableDynamicTeams) {
    LatVar.call(this, "");

	if(disableDynamicTeams === undefined) {
		disableDynamicTeams = false;
	}


    //check if it is a LatVarRange or LatVarList
    LatUtils.checkLatVarRangeOrList(numThreads, "numThreads");
	checkBoolean(disableDynamicTeams, "new LatVarOmpThreads::disableDynamicTeams");

    this.numThreads = numThreads;
	this.name = "#threads";
    //this.generateOmpVariants();
    this.restart();
};

LatVarOmpThreads.prototype = Object.create(LatVar.prototype);
LatVarOmpThreads.prototype.constructor = LatVarOmpThreads;

//Functions overloaded from LatVar
LatVarOmpThreads.prototype.getNext = function() {
    return this.numThreads.getNext();
};

LatVarOmpThreads.prototype.hasNext = function() {
    return this.numThreads.hasNext();
};
LatVarOmpThreads.prototype.countElements = function() {
    return this.numThreads.countElements();
};
LatVarOmpThreads.prototype.restart = function() {
    this.numThreads.restart();
    return this;
};

//specific functions
/*
LatVarOmpThreads.prototype.generateOmpVariants = function() {
    this.variants = [];
    this.numThreads.getNext(); //ignore num threads default
    while (this.numThreads.hasNext()) {
		this.variants.push({
            numThreads: this.numThreads.getNext().value
        });
    }
    this.numThreads.restart();


    return this;
};
*/
LatVarOmpThreads.prototype.changeVariantInAst = function($scope, currentValue) {
	// Add include
	$scope.ancestor("file").addInclude("omp.h", true);

	// Disable dynamic teams, if enabled
	if(this.disableDynamicTeams) {
		$scope.exec insertBegin("omp_set_dynamic(0);");
	}

	// Set number of threads
	$scope.exec insertBegin("omp_set_num_threads(" + currentValue.value + ");");
};

LatVarOmpThreads.prototype.requiresScopeVariable = function() {
	return false;
}

LatVarOmpThreads.prototype.newTemplateCard = function() {
	return new Replacer(templates.getString("var_omp_threads.html.template"));
}
